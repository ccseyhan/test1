# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: rdicidr

on:
  pull_request:
    branches: "*" 

jobs:
  testing:
    runs-on: ubuntu-latest
    env: 
      working-directory: rdicidr-0.1.0/
    steps:
     - uses: actions/setup-node@v3
       with:
          node-version: '15.10' 

     - name: Checkout
       uses: actions/checkout@v3.5.2
       
       
     - name: Install requirements to the agent
       run: npm install -g prettier
       working-directory: ${{ env.working-directory }}
       
     - name: Linter
       run: npm run lint
       working-directory: ${{ env.working-directory }}
       
     - name: Prettier
       run: npm run prettier
       working-directory: ${{ env.working-directory }}
       
     - name: Test (Jest)
       run: CI=true npm run test
       working-directory: ${{ env.working-directory }}
       
  build_and_push_docker_image:
    runs-on: ubuntu-latest
    steps:
      
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          push: true
          tags: ccseyhan/test2313:latest
          
  infra_and_deploy_devel:
      runs-on: ubuntu-latest
      env:
        ARM_CLIENT_ID: "${{ secrets.AZURE_CLIENT_ID }}"
        ARM_SUBSCRIPTION_ID: "${{ secrets.AZURE_SUBSCRIPTION_ID }}"
        ARM_TENANT_ID: "${{ secrets.AZURE_TENANT_ID }}"
        ARM_CLIENT_SECRET: "${{ secrets.AZURE_CLIENT_SECRET }}"
      steps:
        - uses: actions/checkout@v3
          with:
            ref: devel
        
        - uses: hashicorp/setup-terraform@v2
        
        - name: terraform init
          run: terraform init
          
        - name: terraform plan
          run: terraform plan
          
        - name: terraform apply
          run: terraform apply --auto-approve
    
  infra_and_deploy_stage:
      runs-on: ubuntu-latest
      env:
        ARM_CLIENT_ID: "${{ secrets.AZURE_CLIENT_ID }}"
        ARM_SUBSCRIPTION_ID: "${{ secrets.AZURE_SUBSCRIPTION_ID }}"
        ARM_TENANT_ID: "${{ secrets.AZURE_TENANT_ID }}"
        ARM_CLIENT_SECRET: "${{ secrets.AZURE_CLIENT_SECRET }}"
      steps:
        - uses: actions/checkout@v3
          with:
            ref: stage
        
        - uses: hashicorp/setup-terraform@v2
        
        - name: terraform init
          run: terraform init
          
        - name: terraform plan
          run: terraform plan
          
        - name: terraform apply
          run: terraform apply --auto-approve  
          
  infra_and_deploy_prod:
      runs-on: ubuntu-latest
      env:
        ARM_CLIENT_ID: "${{ secrets.AZURE_CLIENT_ID }}"
        ARM_SUBSCRIPTION_ID: "${{ secrets.AZURE_SUBSCRIPTION_ID }}"
        ARM_TENANT_ID: "${{ secrets.AZURE_TENANT_ID }}"
        ARM_CLIENT_SECRET: "${{ secrets.AZURE_CLIENT_SECRET }}"
      steps:
        - uses: actions/checkout@v3
          with:
            ref: main
        
        - uses: hashicorp/setup-terraform@v2
        
        - name: terraform init
          run: terraform init
          
        - name: terraform plan
          run: terraform plan
          
        - name: terraform apply
          run: terraform apply --auto-approve
        
     
     
          
